# -*- mode: ruby -*-
# vi: set ft=ruby :

# Control-plane IP
kuma_cp_ip= "192.168.33.10"

boxes = [
  {
    name: "kuma-cp",
    ip: "#{kuma_cp_ip}",
    box: "ubuntu/xenial64",
    script: [
      "./control-plane/bootstrap.sh"
    ]
  },
  {
    name: "frontend",
    ip: "192.168.33.20",
    box: "ubuntu/xenial64",
    file: "app",
    script: [
      "./frontend/bootstrap.sh",
      "./frontend/dataplane.sh"
    ]
  },
  {
    name: "backend",
    ip: "192.168.33.30",
    box: "ubuntu/xenial64",
    file: "api",
    script: [
      "./backend/bootstrap.sh",
      "./backend/dataplane.sh"
    ]
  },
  {
    name: "elastic",
    ip: "192.168.33.40",
    box: "elastic/ubuntu-16.04-x86_64",
    script: [
      "./elastic/bootstrap.sh",
      "./elastic/dataplane.sh"
    ]
  }
]

KUMA_VERSION = "0.3.1"
KUMA_HOME    = "/opt/kuma"

KUMA_CONTROL_PLANE_IP = "192.168.33.10"
REDIS_IP              = "192.168.33.50"

Vagrant.configure("2") do |config|

  boxes.each do |box|
    
    config.vm.define box[:name] do |srv|
      srv.vm.synced_folder "./", "/home/vagrant/kuma"

      srv.vm.box = box[:box]
      srv.vm.hostname = box[:name]
      srv.vm.network :private_network, ip: box[:ip]
      if box[:name] == "frontend"
        # So we can access the frontend application when mTLS is turned on
        srv.vm.network "forwarded_port", guest: 8080, host: 8080, guest_ip: "127.0.0.1"
      end

      if box[:file]
        srv.vm.provision "file", source: "../#{box[:file]}", destination: "$HOME/#{box[:file]}"
      end
      
      box[:script].each do |script|
        srv.vm.provision :shell, path: script
      end 
  
    end

  end

  config.vm.define "redis" do |node|
    node.vm.box = "ubuntu/xenial64"
    node.vm.hostname = "redis"
    node.vm.network :private_network, ip: REDIS_IP
    node.vm.provision "update_etc_hosts", type: "shell", path: "common/update_etc_hosts.sh", env: { "KUMA_CONTROL_PLANE_IP" => KUMA_CONTROL_PLANE_IP }
    node.vm.provision "install_redis", type: "shell", path: "redis/app/install.sh"
    node.vm.provision "download_kuma", type: "shell", path: "common/download_kuma.sh", env: {"KUMA_VERSION" => KUMA_VERSION, "KUMA_HOME" => KUMA_HOME }
    node.vm.provision "install_kuma-dp", type: "shell", path: "common/install_kuma-dp.sh", env: {"KUMA_DP_UNIT_FILE" => "/vagrant/redis/kuma/kuma-dp.service"}
    node.vm.provision "configure_kumactl", type: "shell", path: "common/configure_kumactl.sh", privileged: false
    node.vm.provision "register_dataplane", type: "shell", path: "common/register_dataplane.sh", env: {"KUMA_DATAPLANE_FILE" => "/vagrant/redis/kuma/dataplane.yaml", "KUMA_DATAPLANE_IP" => REDIS_IP}, privileged: false
  end

end
